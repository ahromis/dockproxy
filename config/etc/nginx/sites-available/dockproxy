server {
    set_by_lua $reg_v1_addr 'return os.getenv("REG_V1_ADDR")';
    set_by_lua $reg_v1_prt 'return os.getenv("REG_V1_PRT")';
    set_by_lua $reg_v1_search 'return os.getenv("REG_V1_SEARCH")';
    set_by_lua $reg_v2_addr 'return os.getenv("REG_V2_ADDR")';
    set_by_lua $reg_v2_prt 'return os.getenv("REG_V2_PRT")';

    listen 443 default_server;
    client_max_body_size 0;
    chunked_transfer_encoding on;

    ssl on;
    ssl_certificate /etc/nginx/ssl/dockproxy.crt;
    ssl_certificate_key /etc/nginx/ssl/dockproxy.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    location / {
        auth_pam "secured";
        auth_pam_service_name "nginx";
            
        proxy_buffering off;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
            
        proxy_pass http://$reg_v1_addr:$reg_v1_prt;
     }
    location /_ping {
        proxy_buffering off;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        proxy_pass http://$reg_v1_addr:$reg_v1_prt;
    }
    location /v1/_ping {
        proxy_buffering off;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        proxy_pass http://$reg_v1_addr:$reg_v1_prt;
    }
    location /v1/search {
        if ($reg_v1_search != 'enabled') {
            return 401;
        }
        proxy_buffering off;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_pass http://$reg_v1_addr:$reg_v1_prt;
    }
    location /v2/ {
        auth_pam "secured";
        auth_pam_service_name "nginx";


        more_set_headers 'Docker-Distribution-Api-Version: registry/2.0';

        proxy_buffering off;
        proxy_redirect off;
        proxy_read_timeout 900;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_pass http://$reg_v2_addr:$reg_v2_prt;

    }
}
